{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,OAAO,EAAC,MAAM,gBAAgB,CAAA;AACtC;IAGI;QAEI,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,EAAE,CAAA;IAChC,CAAC;IAEM,wBAAS,GAAhB,UAAiB,OAAc,EAAE,QAAe,EAAE,UAAe,EAAE,SAAiB;QAAjB,0BAAA,EAAA,iBAAiB;QAEhF,IAAI,CAAC,CAAC,UAAU,EAChB;YACI,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;YACzB,2DAA2D;YAC3D,oCAAoC;YACpC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAA;YACnC,yFAAyF;YACzF,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,EAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;SACjE;aAED;YACI,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAA;YAC1C,OAAO,KAAK,CAAA;SACf;IACL,CAAC;IACL,WAAC;AAAD,CAAC,AAzBD,IAyBC","sourcesContent":["import {Service} from './cron.service'\nexport class Cron{\n    private service\n\n    constructor()\n    {\n        this.service = new Service()\n    }\n    \n    public startCron(pattern:string, funcname:string, funcobject: any, runoninit = false)\n    {\n        if (!!funcobject)\n        {\n            console.log('start cron')\n            //new Service(this.config).runCron(config,funcname)        \n            //let srv = new Service(this.config)\n            this.service[funcname] = funcobject\n            //srv[funcname] = new Controller(this.config).getProduct().getService().syncProductCron()\n            return this.service.runCronDetail(pattern,funcname, runoninit)\n        }\n        else\n        {\n            console.log('khong ton tai cron function')\n            return false\n        }       \n    }\n}"]}